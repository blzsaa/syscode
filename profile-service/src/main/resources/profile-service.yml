openapi: "3.0.0"
info:
  version: 1.0.0
  title: Profile Service openapi
  license:
    name: MIT
paths:
  /students:
    get:
      summary: List all students
      operationId: listStudents
      tags:
        - students
      responses:
        '200':
          description: Array of students
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Students"
    post:
      summary: Create a student entity
      operationId: createStudent
      tags:
        - students
      requestBody:
        description: The desired value of a new student
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentCreateDto"
      responses:
        '201':
          description: Null response
          headers:
            location:
              description: A link to the student entity
              schema:
                type: string
  /students/{studentId}:
    get:
      summary: Info for a specific student
      operationId: getStudentById
      tags:
        - students
      parameters:
        - name: studentId
          in: path
          required: true
          description: The id of the student to retrieve
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        '404':
          description: Student not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
    put:
      summary: Update a specific student
      operationId: updateStudent
      tags:
        - students
      parameters:
        - name: studentId
          in: path
          required: true
          description: The id of the student to retrieve
          schema:
            type: string
            format: uuid
      requestBody:
        description: The desired updated value of student
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentCreateDto"
      responses:
        '200':
          description: Updated student
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        '404':
          description: Student not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
    delete:
      summary: Delete a student entity
      operationId: deleteStudent
      tags:
        - students
      parameters:
        - name: studentId
          in: path
          required: true
          description: The id of the student to retrieve
          schema:
            type: string
            format: uuid
      responses:
        '203':
          description: No content
        '404':
          description: Student not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
  /addresses/{addressId}:
    get:
      summary: Info for a specific address
      operationId: getAddressById
      tags:
        - addresses
      parameters:
        - name: addressId
          in: path
          required: true
          description: The id of the address to retrieve
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Address"
        '404':
          description: Address not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Problem"
components:
  schemas:
    StudentCreateDto:
      type: object
      required:
        - name
        - emailAddress
      properties:
        name:
          type: string
        emailAddress:
          type: string
          pattern: '^[^@]+@[^@]+\.[^@]+$'
    Student:
      type: object
      required:
        - id
        - name
        - emailAddress
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        emailAddress:
          type: string
          pattern: '^[^@]+@[^@]+\.[^@]+$'
    Students:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Student"
    Address:
      type: object
      required:
        - id
        - address
      properties:
        id:
          type: string
          format: uuid
        address:
          type: string
    Problem:
      # copied from: https://opensource.zalando.com/problem/schema.yaml#/Problem
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: 'about:blank'
          example: 'https://zalando.github.io/problem/constraint-violation'
        title:
          type: string
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the
            problem.
          example: Connection to database timed out
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
